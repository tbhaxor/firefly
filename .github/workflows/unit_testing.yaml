name: Unit Testing

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  ensure_tests:
    name: Ensure No Missing Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - run: |
          ./scripts/test_generator.sh
        name: Run test generator script

  unit_test_gcc_linux:
    name: Linux (GCC=v${{ matrix.version }})
    needs: [ ensure_tests ]
    strategy:
      matrix:
        version: [9, 10, 11, 12, 13]
    runs-on: ubuntu-latest
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - uses: egor-tensin/setup-gcc@v1.3
        name: Install GCC
        with:
          version: ${{ matrix.version }}
      - run: |
          cmake -Bbuild -DFirefly_ENABLE_TESTS=ON
          cmake --build build 
        name: Configure and build binaries
      - run: |
          ctest --test-dir build/tests/ --verbose
        name: Run tests
  
  unit_test_llvm_linux:
    name: Linux (LLVM=v${{ matrix.version }})
    needs: [ ensure_tests ]
    strategy:
      matrix:
        version: [11, 12, 13, 14, 15, 16]
    runs-on: ubuntu-latest
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - uses: egor-tensin/setup-clang@v1.4
        name: Install LLVM
        with:
          version: ${{ matrix.version }}
      - run: |
          cmake -Bbuild -DFirefly_ENABLE_TESTS=ON
          cmake --build build 
        name: Configure and build binaries
      - run: |
          ctest --test-dir build/tests/ --verbose
        name: Run tests
  
  unit_test_gcc_macos:
    name: MacOS (GCC=v${{ matrix.version }})
    needs: [ ensure_tests ]
    strategy:
      matrix:
        version: [10, 11, 12, 13]
    runs-on: macos-latest
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - run: |
          brew install gcc@${{ matrix.version }}
        name: Install GCC
      - run: |
          cmake -Bbuild -DFirefly_ENABLE_TESTS=ON
          cmake --build build 
        name: Configure and build binaries
      - run: |
          ctest --test-dir build/tests/ --verbose
        name: Run tests
  
  unit_test_llvm_macos:
    name: MacOS (LLVM=v${{ matrix.version }})
    needs: [ ensure_tests ]
    strategy:
      matrix:
        version: [12, 13, 14, 15, 16]
    runs-on: macos-latest
    env:
      CC: /usr/local/opt/llvm@${{ matrix.version }}/bin/clang
      CXX: /usr/local/opt/llvm@${{ matrix.version }}/bin/clang++
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - run: |
          brew install llvm@${{ matrix.version }}
        name: Install LLVM
      - run: |
          cmake -Bbuild -DFirefly_ENABLE_TESTS=ON
          cmake --build build 
        name: Configure and build binaries
      - run: |
          ctest --test-dir build/tests/ --verbose
        name: Run tests
